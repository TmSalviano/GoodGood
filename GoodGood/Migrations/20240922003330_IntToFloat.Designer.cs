// <auto-generated />
using GoodGood.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GoodGood.Migrations
{
    [DbContext(typeof(ComidaDbContext))]
    [Migration("20240922003330_IntToFloat")]
    partial class IntToFloat
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("GoodGood.Models.Receita", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Categoria1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Categoria2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ModeDePreparo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Receitas");
                });

            modelBuilder.Entity("GoodGood.Models.ReceitaIngrediente", b =>
                {
                    b.Property<int>("ReceitaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IngredienteId")
                        .HasColumnType("INTEGER");

                    b.Property<float>("Quantidade")
                        .HasColumnType("REAL");

                    b.HasKey("ReceitaId", "IngredienteId");

                    b.HasIndex("IngredienteId");

                    b.ToTable("ReceitasIngrediente");
                });

            modelBuilder.Entity("Ingrediente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<float>("CaloriasEmKcal")
                        .HasColumnType("REAL");

                    b.Property<float>("CarboidratosEmG")
                        .HasColumnType("REAL");

                    b.Property<float>("GordurasEmG")
                        .HasColumnType("REAL");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("ProteinasEmG")
                        .HasColumnType("REAL");

                    b.Property<string>("UnidadeDeMedida")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ingredientes");
                });

            modelBuilder.Entity("GoodGood.Models.ReceitaIngrediente", b =>
                {
                    b.HasOne("Ingrediente", "Ingrediente")
                        .WithMany()
                        .HasForeignKey("IngredienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GoodGood.Models.Receita", "Receita")
                        .WithMany("IngredientesDaReceita")
                        .HasForeignKey("ReceitaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ingrediente");

                    b.Navigation("Receita");
                });

            modelBuilder.Entity("GoodGood.Models.Receita", b =>
                {
                    b.Navigation("IngredientesDaReceita");
                });
#pragma warning restore 612, 618
        }
    }
}
